@model CiZoochilpan.Areas.Medicina.Models.ProfilaxisAndFarmaco

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<SelectListItem> lstEjemplares = new List<SelectListItem>();
    lstEjemplares.Add(new SelectListItem { Text = "--Seleccione Ejemplar--", Value = "", Selected = true });

    List<SelectListItem> lstVeterinario = new List<SelectListItem>();
    lstVeterinario.Add(new SelectListItem { Text = "--Seleccione Veterinario--", Value = "", Selected = true });

    List<SelectListItem> lstFarmacos = new List<SelectListItem>();
    lstFarmacos.Add(new SelectListItem { Text = "--Seleccione Farmaco--", Value = "", Selected = true });

}

<br />
<br />

<div class="container">
    <div class="row">
        <div class="col-md-9">
            <div class="panel panel-default">
                <div class="panel-heading"><center><h3 class="opcion_iluminada">Registrar  Hoja Profilaxis</h3></center></div>
                <div class="panel-body">
                    <a href="@Url.Action("Index", "HojaProfilaxis" )" class="btn btn-primary btn-xs">
                        <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
                    </a>
                    <br />
                    <br />


                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            

                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.hojas.lugar, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.hojas.lugar, new { htmlAttributes = new { @class = "form-control", @value = "Zoológico Zoochilpan" } })
                                    @Html.ValidationMessageFor(model => model.hojas.lugar, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.hojas.fecha, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.hojas.fecha, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.hojas.fecha, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Elige ejemplar", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.hojas.marcaje, lstEjemplares, new { @class = "form-control", @id = "ejemplarDropDown", @name = "ejemplarDropDown" })
                                    @Html.ValidationMessageFor(model => model.hojas.marcaje, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.hojas.tratamiento, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.hojas.tratamiento, new { htmlAttributes = new { @class = "form-control", @rows = "5" } })
                                    @Html.ValidationMessageFor(model => model.hojas.tratamiento, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.hojas.observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.hojas.observaciones, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.hojas.observaciones, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.hojas.fechaAplicacion, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.hojas.fechaAplicacion, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.hojas.fechaAplicacion, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Agregar farmaco", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <a href="#ventanaFarmaco" class="btn btn-primary btn-xl" , name="emergente" , id="emergente" , data-toggle="modal">
                                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                                    </a>
                                </div>
                            </div>

                            <div class="table-responsive col-md-15" style="text-align:center;">
                                <table id="tablaFarmaco" class="table table-borderless" style="align-content:center">
                                    <thead>
                                        <tr>
                                            <th> Id </th>
                                            <th> Nombre </th>
                                            <th> Via</th>
                                            <th> Dosis </th>
                                            <th> Frecuencia </th>
                                            <th> Fecha </th>
                                            <th> Acciones </th>
                                        </tr>
                                    </thead>

                                    <tbody>
                                    <td name="id"> </td>
                                    <td name="idFarmaco"></td>
                                    <td name="viaFarmaco"> </td>
                                    <td name="dosisFarmaco"> </td>
                                    <td name="frecuenciaFarmaco"> </td>
                                    <td name="fechaFarmaco"> </td>
                                    </tbody>
                                </table>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.hojas.fechaProxima, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.hojas.fechaProxima, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.hojas.fechaProxima, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.hojas.idVeterinario, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">

                                    @Html.DropDownListFor(model => model.hojas.idVeterinario, lstVeterinario, new { @class = "form-control", @id = "veterinarioDropDown", @name = "veterinarioDropDown" })
                                    @Html.ValidationMessageFor(model => model.hojas.idVeterinario, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.farmaco.idProfilaxis, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.farmaco.idProfilaxis, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Guardar" class="btn btn-primary" id="btnGuardar" name="btnGuardar" />
                                </div>
                            </div>


                        </div>
                    }

                </div>
            </div>
        </div>

    </div>

    <div class="container">
        <div class="modal fade" id="ventanaFarmaco">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"> &times;</button>
                        <h3 class="modal-title">Datos del fármaco </h3>
                    </div>
                    <br />
                    <br />
                    <!--contenido de la ventana modal-->
                    <form method="post" id="farmacoInsert">
                        <div class="form-group modal-body">
                            @Html.LabelFor(model => model.farmaco.fechaAplicacion, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6 col-md-offset-1">
                                @Html.EditorFor(model => model.farmaco.fechaAplicacion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.farmaco.fechaAplicacion, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group modal-body">
                            @Html.Label("Elige farmaco", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.farmaco.idFarmaco, lstEjemplares, new { @class = "form-control", @id = "farmacoDropDown", @name = "farmacoDropDown" })
                                @Html.ValidationMessageFor(model => model.farmaco.idFarmaco, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group modal-body">
                            @Html.Label("Via", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.Editor("via", new { htmlAttributes = new { @class = "form-control", @name = "via", @id = "via", @readonly = "readonly" } })
                                @Html.ValidationMessage("via", "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group modal-body">
                            @Html.LabelFor(model => model.farmaco.dosis, htmlAttributes: new { @class = "control-label col-md-2", @name = "dosis", @id = "dosis" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.farmaco.dosis, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.farmaco.dosis, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group modal-body">
                            @Html.LabelFor(model => model.farmaco.frecuencia, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.farmaco.frecuencia, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.farmaco.frecuencia, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </form>
                    <br />
                    <br />

                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-dismiss="modal"> cerrar</button>
                        <button type="button" class="btn btn-success" id="addFarmaco" name="addFarmaco" data-dismiss="modal">Guardar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>



    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script>
            $(document).ready(function () {
                var idAnimal, idFarmaco;
                var selectorAnimal = document.querySelector('#ejemplarDropDown');
                var selectorFarmaco = document.querySelector('#farmacoDropDown');
                var count = 0;

                fetch('http://tanathos-001-site1.dtempurl.com/api/ProfilaxisFarmaco')
                    .then(function (response) {
                        return response.json();
                    })
                    .then(function (myJson) {
                        $("#farmaco_idProfilaxis").val('' + myJson.idClinica);
                    }).catch(function (error) {
                        $("#farmaco_idProfilaxis").val('Error al obtener maximo id');
                        ;
                        console.log("hubo un problema al obtener  la petición fetch:" + error.message);
                    });



                fetch('http://tanathos-001-site1.dtempurl.com/api/Ejemplar')
                    .then(function (response) {
                        return response.json();
                    })
                    .then(function (myJson) {
                        $("#ejemplarDropDown").empty().append('<option value=""> Seleciona Ejemplar</option>');
                        for (var i = 0; i < myJson.length; i++) {
                            $('<option value="' + myJson[i].marcaje + '">' + myJson[i].nombrePropio + " - " + myJson[i].nombreComun + '</option>').appendTo("#ejemplarDropDown");
                        }
                    }).catch(function (error) {

                        $("#ejemplarDropDown").empty().append('<option value=""> No hay ejemplares</option>');
                        console.log("hubo un problema al obtener  la petición fetch:" + error.message);
                    });


                fetch('http://tanathos-001-site1.dtempurl.com/api/Farmaco')
                    .then(function (response) {
                        return response.json();
                    })
                    .then(function (myJson) {
                        $("#farmacoDropDown").empty().append('<option value=""> Selecciona farmaco </option> ');
                        for (var i = 0; i < myJson.length; i++) {
                            $('<option value="' + myJson[i].id + '">' + myJson[i].nombre + '</option>').appendTo("#farmacoDropDown");

                        }
                    }).catch(function (error) {
                        $("#farmacoDropDown").empty().append('<option value=""> No hay ejemplares </option>');
                        console.log("hubo un problema al obtener la petición fetch: " + error.message);
                    })


                fetch('http://tanathos-001-site1.dtempurl.com/api/Veterinario')
                    .then(function (response) {
                        return response.json();
                    })
                    .then(function (myJson) {
                        $("#veterinarioDropDown").empty().append('<option value=""> Seleciona Veterinario</option>');
                        for (var i = 0; i < myJson.length; i++) {
                            $('<option value="' + myJson[i].id + '">' + myJson[i].nombre + " - " + myJson[i].apellidoPaterno + '</option>').appendTo("#veterinarioDropDown");
                        }
                    }).catch(function (error) {

                        $("#veterinarioDropDown").empty().append('<option value=""> No hay veterinario</option>');
                        console.log("hubo un problema al obtener  la petición fetch:" + error.message);
                    });

                selectorAnimal.addEventListener('change', function () {
                    idAnimal = $('select[id=ejemplarDropDown]').val();

                });

                selectorFarmaco.addEventListener('change', function () {
                    idFarmaco = $('select[id=farmacoDropDown]').val();
                    fetch('http://tanathos-001-site1.dtempurl.com/api/Farmaco?id=' + idFarmaco)
                        .then(function (response) {
                            return response.json();
                
                        })
                        .then(function (myJson) {
                            $("#via").val('' + myJson.via);

                        }).catch(function (error) {

                            $("#via").val('error');
                            console.log("hubo un problema al obtener  la petición fetch:" + error.message);
                        });
                });


                $("#addFarmaco").click(function (event) {
                    var nombreFar = $('select[id="farmacoDropDown"] option:selected').text();
                    count++;
                    var dosisFar = $('input[id=farmaco_dosis]').val();
                    var viaFar = $('input[name=via]').val();
                    var frecuenciaFar = $('input[id=farmaco_frecuencia]').val();
                    var fechaFar = $('input[id=farmaco_fechaAplicacion]').val();
                    var idFar = $(selectorFarmaco).val();

                    $('#tablaFarmaco tr:last').before('<tr ><td class="idFarm"> ' + idFar + '</td><td name="nombreFarm[]">' + nombreFar + '</td><td name="viaFarm[]">' + viaFar + '</td><td name="dosisFarm[]">' + dosisFar + '</td><td name="freFarm[]">' + frecuenciaFar + '</td><td name="fechaFarm[]">' + fechaFar + '</td><td><button class="btn btn-primary btn-xs editar" id="editar" name="editar"> <span class="glyphicon glyphicon-pencil"></span></button><button class="btn btn-danger btn-xs borrar"  id="borrar" name="borrar"> <span class="glyphicon glyphicon-trash"></span></button></td></tr>');
                    $("#via").val('');
                    $("#farmaco_nombreFarmaco").val('');
                    $("#farmaco_dosis").val('');
                    $("#farmaco_frecuencia").val('');
                    $("#farmaco_fechaAplicacion").val('');
                    event.preventDefault();
                   
                    /*
                    $.ajax({
                        url: 'http://localhost:49770/api/ProfilaxisFarmaco',
                        type: "POST",
                        dataType: 'json',

                        data: { idClinica: idProfilaxis, idFarmaco: idFar, dosis:dosisFar, frecuencia: frecuenciaFar, fechaAplicacion: fechaFar },
                        success: function (response) {
                            console.log("exitos prros");
                        }
                    }); */


                });

                $(function () {
                    $(document).on('click', '.borrar', function (event) {
                        event.preventDefault();
                        $(this).closest('tr').remove();
                    });
                });

                $(function () {
                    $(document).on('click', '.editar', function (event) {
                        event.preventDefault();
                        var valFarmaco, filaTabla;
                        filaTabla = $(this).parents("tr");
                        $(this).parents("tr").find("td").each(function () {
                            valFarmaco += $(this).html() + ",";
                            event.preventDefault();
                            $(this).closest('tr').remove();
                        });

                        var arregloDatos = valFarmaco.split(',');
                        var idfarmacoEdit = arregloDatos[0].substring(10, 11);
                        idfarmacoEdit = idfarmacoEdit.toString();
                        var i = "   1    ";
                        idfarmacoEdit = idfarmacoEdit.trim();
                        $('#farmacoDropDown > option[value="0"]').attr('selected', 'selected');
                        $("#via").val(arregloDatos[2]);
                        $("#farmacos_dosis").val(arregloDatos[3]);
                        $("#farmacos_frecuencia").val(arregloDatos[4]);
                        $("#farmacos_fechaAplicacion").val(arregloDatos[5]);
                        $('#ventanaFarmaco').modal("show");
                    });
                });


                $('form').submit(function () {

                    if ($(this).valid()) {
                        var idProfilaxis = $('input[id=farmaco_idProfilaxis]').val();
                        idProfilaxis = parseInt(idProfilaxis);
                        idProfilaxis = idProfilaxis + 1;
                        var valores = "";
                        var contador = 0;
                        var columnas = 6;
                        $(".idFarm").parent("tr").find("td").each(function () {
                            valores += $(this).html();
                            if (contador == columnas) {
                                valores += ";";
                                columnas += 7;
                            } else {
                                valores += ",";
                            }

                            contador++;
                        });

                        var arregloDeCadenas = valores.split(';');
                        var nuevaCadena = valores.replace(/;/g, ',');
                        var arregloDatos = nuevaCadena.split(',');
                        var paso = 0;


                        for (i = 0; i < arregloDeCadenas.length - 1; i++) {
                        /*
                            fetch('http://localhost:49770/api/ProfilaxisFarmaco', {
                                method: "POST",
                                headers: {                        
                                    'Content-Type': 'application/json; charset=utf-8'
                                },
                                body: JSON.stringify({idClinica: idProfilaxis, idFarmaco: arregloDatos[paso], dosis: arregloDatos[paso + 3], frecuencia: arregloDatos[paso + 4], fechaAplicacion: arregloDatos[paso + 5]  })
                            })
                            .then(function (response) {
                                return response.json();

                            }).catch(function (error) {

                               
                                console.log("hubo un problema al obtener  la petición fetch:" + error.message);
                            }); */
                

                            
                            $.ajax({
                                url: 'http://localhost:49770/api/ProfilaxisFarmaco',
                                type: "POST",
                                dataType: 'json',
                                
                                data: { idClinica: idProfilaxis, idFarmaco: arregloDatos[paso], dosis: arregloDatos[paso + 3], frecuencia: arregloDatos[paso + 4], fechaAplicacion: arregloDatos[paso + 5] },
                                success: function (response) {
                                    console.log("exitos prros");
                                }
                            }); 
                            paso += 7;
                        }
                    }

                })


            });

        </script>


    }
