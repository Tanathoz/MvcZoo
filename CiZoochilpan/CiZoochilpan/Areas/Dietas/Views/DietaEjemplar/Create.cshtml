@model CiZoochilpan.Areas.Dietas.Models.DietaEjemplarModelView

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>DietaEjemplarModelView</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.marcaje, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.marcaje, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.marcaje, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nombreComun, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombreComun, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombreComun, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nombrePropio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombrePropio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombrePropio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaCambio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaCambio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fechaCambio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.causaCambio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.causaCambio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.causaCambio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cantidad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cantidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.alimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.alimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.alimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.horario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.horario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.horario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.consideraciones, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.consideraciones, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.consideraciones, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {

            console.log("Lo bueno esta");

            fetch('http://tanathoz-001-site1.ctempurl.com/api/Ejemplar')
                .then(function (response) {

                    return response.json();
                    for (var i = 0; i < response.length; i++) {
                        console.log(response[i].nombrePropio);
                    }
                })
                .then(function (myJson) {
                    $("#animalDropDown").empty().append('<option value=""> Seleciona Animal</option>');
                    for (var i = 0; i < myJson.length; i++) {
                        console.log(myJson[i].nombreCientifico);
                        $('<option value="' + myJson[i].id + '">' + myJson[i].nombreComun + '</option>').appendTo("#animalDropDown");
                    }
                    console.log(JSON.stringify(myJson));
                }).catch(function (error) {
                    $("#animalDropDown").empty().append('<option value=""> No hay animales</option>');
                    console.log("hubo un problema al obtener  la petición fetch:" + error.message);
                });


            fetch('http://tanathoz-001-site1.ctempurl.com/api/Ejemplar')
                .then(function (response) {
                    return response.json();
                    console.log("Lo bueno esta322");
                    for (var i = 0; i < response.length; i++) {
                        console.log(response[i].nombrePropio);
                    }
                })
                .then(function (myJson) {
                    $("#ejemplarDropDown").empty().append('<option value=""> Seleciona Ejemplar</option>');
                    for (var i = 0; i < myJson.length; i++) {
                        $('<option value="' + myJson[i].marcaje + '">' + myJson[i].nombrePropio + '</option>').appendTo("#ejemplarDropDown");
                    }

                }).catch(function (error) {

                    $("#animalDropDown").empty().append('<option value=""> No hay animales</option>');
                    console.log("hubo un problema al obtener  la petición fetch:" + error.message);
                });
        });
    </script>
}
